#!/usr/bin/php -q
<?php
define('HISTORY_PATH', "http://info.finance.yahoo.co.jp/history/");

$options = getopt("c:", array(
    "clean",
    "monthly",
    "weekly",
    "daily",
    "help"
));

if (!isset($options['c']) || isset($options['help'])) {
    echo <<<USAGE
Usage: download-stocks [--clean] -c <stock code>

-c <stock code>: Specify stock code here. For example Biccamera is 3048.T
--clean: Add this to clean the cache for the given stock code, e.g. when downloading a new range of dates
--monthly: Retrieve monthly data
--weekly: Retrieve weekly data
--daily: Retrieve daily data (default)
--help: Show this message


USAGE;

    exit(1);
}

function getHtml($code, $start, $end, $period, $page) {
    $url = HISTORY_PATH . "?";

    list($sy, $sm, $sd) = explode('-', $start);
    list($ey, $em, $ed) = explode('-', $end);

    $params = array(
        'code' => $code,
        'sy' => $sy,
        'sm' => $sm,
        'sd' => $sd,
        'ey' => $ey,
        'em' => $em,
        'ed' => $ed,
        'tm' => $period,
        'p' => $page
    );

    $url .= http_build_query($params);
    echo "Downloading $url ..." . PHP_EOL;
    $html = file_get_contents($url);

    // Need to clean up, and have anchor-as-name set to false as Yahoo Japan is using
    // <a name="xx" id="xx"> which DOMDocument does not like
    $tidy = new tidy();
    $clean = $tidy->repairString($html, array('anchor-as-name' => false), 'utf8');

    return $clean;
}

$start = '2009-05-01';
$end = '2014-06-01';

$period = "d";
if (isset($options['weekly'])) $period = "w";
if (isset($options['monthly'])) $period = "m";

$cache_dir = getenv('HOME') . "/.cache/yjstocks";
is_dir($cache_dir) || mkdir($cache_dir, 0750, true);

if (isset($options['clean'])) {
    array_map('unlink', glob($cache_dir . "/" . $options['c'] . ".*"));
}

$cols = array(
    'date', 'open', 'high', 'low', 'close', 'volume', 'adjclose'
);
$ncols = count($cols);

$data = array();

$page = 1;
while (true) {
    $cache = $cache_dir . "/" . $options['c'] . "." . $page . ".html";

    if (file_exists($cache)) {
        echo "Opening $cache ..." . PHP_EOL;
        $html = file_get_contents($cache);
    } else {
        $html = getHtml($options['c'], $start, $end, $period, $page);
        file_put_contents($cache, $html);
    }

    $dom = DOMDocument::loadHTML($html);
    $xpath = new DOMXPath($dom);
    $rows = $xpath->query("//table[@class='boardFin yjSt marB6']//tr");

    if ($rows->length <= 1) break;

    foreach($rows as $i => $row) {
        if ($i == 0) continue; // Skip header row

        $cellValues = explode("\n", trim($row->nodeValue));
        if (count($cellValues) != 7) continue; // Skip split rows

        foreach($cellValues as $j => $value) {
            $col = $j % $ncols;
            if ($col == 0) {
                $entry = array();
                $value = trim(preg_replace('/\pL/u', '-', $value), '-');
                $date = new DateTime($value);
                $value = $date->format('Y-m-d');
            } else {
                $value = intval(str_replace(",", "", $value));
            }

            $entry[$cols[$col]] = $value;
            if ($col == $ncols - 1) $data[] = $entry;
        }
    }

    $page++;
}

usort($data, function($u, $v) {
    if ($u['date'] == $v['date']) return 0;

    return $u['date'] < $v['date'] ? -1 : 1;
});

$fp = fopen($options['c'] . ".csv", "w");
fputcsv($fp, $cols);
foreach($data as $entry) {
    fputcsv($fp, $entry);
}
fclose($fp);
